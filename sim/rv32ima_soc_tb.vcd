$date
	Mon Jun  6 19:27:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module rv32ima_soc_tb $end
$var reg 1 ! CLOCK_50 $end
$var reg 1 " rst $end
$scope module rv32ima_top0 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # rom_ce $end
$var wire 32 $ inst_addr [31:0] $end
$var wire 32 % inst [31:0] $end
$scope module rom0 $end
$var wire 1 # ce_i $end
$var wire 32 & addr_i [31:0] $end
$var reg 32 ' inst_o [31:0] $end
$upscope $end
$scope module rv32IMAcore0 $end
$var wire 1 ! clk_i $end
$var wire 32 ( rom_addr_o [31:0] $end
$var wire 32 ) rom_data_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 * wb_reg_we $end
$var wire 32 + wb_reg_wdata [31:0] $end
$var wire 5 , wb_reg_waddr [4:0] $end
$var wire 1 # rom_ce_o $end
$var wire 1 - reg2_re $end
$var wire 32 . reg2_data [31:0] $end
$var wire 5 / reg2_addr [4:0] $end
$var wire 1 0 reg1_re $end
$var wire 32 1 reg1_data [31:0] $end
$var wire 5 2 reg1_addr [4:0] $end
$var wire 32 3 pc [31:0] $end
$var wire 1 4 mem_reg_we_o $end
$var wire 1 5 mem_reg_we_i $end
$var wire 32 6 mem_reg_wdata_o [31:0] $end
$var wire 32 7 mem_reg_wdata_i [31:0] $end
$var wire 5 8 mem_reg_waddr_o [4:0] $end
$var wire 5 9 mem_reg_waddr_i [4:0] $end
$var wire 1 : id_reg_we_o $end
$var wire 5 ; id_reg_waddr_o [4:0] $end
$var wire 32 < id_op2_o [31:0] $end
$var wire 32 = id_op1_o [31:0] $end
$var wire 32 > id_inst_i [31:0] $end
$var wire 32 ? id_inst_addr_i [31:0] $end
$var wire 8 @ id_aluOp_o [7:0] $end
$var wire 1 A exe_reg_we_o $end
$var wire 1 B exe_reg_we_i $end
$var wire 32 C exe_reg_wdata_o [31:0] $end
$var wire 5 D exe_reg_waddr_o [4:0] $end
$var wire 5 E exe_reg_waddr_i [4:0] $end
$var wire 32 F exe_op2_i [31:0] $end
$var wire 32 G exe_op1_i [31:0] $end
$var wire 8 H exe_aluOp_i [7:0] $end
$scope module exe0 $end
$var wire 1 " rst_i $end
$var wire 1 B reg_we_i $end
$var wire 5 I reg_waddr_i [4:0] $end
$var wire 32 J op2_i [31:0] $end
$var wire 32 K op1_i [31:0] $end
$var wire 8 L aluOp_i [7:0] $end
$var reg 5 M reg_waddr_o [4:0] $end
$var reg 32 N reg_wdata_o [31:0] $end
$var reg 1 A reg_we_o $end
$upscope $end
$scope module exe_mem0 $end
$var wire 1 ! clk_i $end
$var wire 5 O reg_waddr_i [4:0] $end
$var wire 32 P reg_wdata_i [31:0] $end
$var wire 1 A reg_we_i $end
$var wire 1 " rst_i $end
$var reg 5 Q reg_waddr_o [4:0] $end
$var reg 32 R reg_wdata_o [31:0] $end
$var reg 1 5 reg_we_o $end
$upscope $end
$scope module id0 $end
$var wire 5 S exe_reg_waddr_i [4:0] $end
$var wire 32 T exe_reg_wdata_i [31:0] $end
$var wire 1 A exe_reg_we_i $end
$var wire 1 " rst_i $end
$var wire 5 U rs2 [4:0] $end
$var wire 5 V rs1 [4:0] $end
$var wire 32 W reg2_rdata_i [31:0] $end
$var wire 32 X reg1_rdata_i [31:0] $end
$var wire 5 Y rd [4:0] $end
$var wire 7 Z opcode [6:0] $end
$var wire 1 4 mem_reg_we_i $end
$var wire 32 [ mem_reg_wdata_i [31:0] $end
$var wire 5 \ mem_reg_waddr_i [4:0] $end
$var wire 32 ] inst_i [31:0] $end
$var wire 32 ^ inst_addr_i [31:0] $end
$var wire 7 _ funct7 [6:0] $end
$var wire 3 ` funct3 [2:0] $end
$var reg 8 a aluOp_o [7:0] $end
$var reg 32 b imm [31:0] $end
$var reg 32 c op1_o [31:0] $end
$var reg 32 d op2_o [31:0] $end
$var reg 5 e reg1_raddr_o [4:0] $end
$var reg 1 0 reg1_re_o $end
$var reg 5 f reg2_raddr_o [4:0] $end
$var reg 1 - reg2_re_o $end
$var reg 5 g reg_waddr_o [4:0] $end
$var reg 1 : reg_we_o $end
$upscope $end
$scope module id_exe0 $end
$var wire 8 h aluOp_i [7:0] $end
$var wire 1 ! clk_i $end
$var wire 32 i op1_i [31:0] $end
$var wire 32 j op2_i [31:0] $end
$var wire 5 k reg_waddr_i [4:0] $end
$var wire 1 : reg_we_i $end
$var wire 1 " rst_i $end
$var reg 8 l aluOp_o [7:0] $end
$var reg 32 m op1_o [31:0] $end
$var reg 32 n op2_o [31:0] $end
$var reg 5 o reg_waddr_o [4:0] $end
$var reg 1 B reg_we_o $end
$upscope $end
$scope module if_id0 $end
$var wire 1 ! clk_i $end
$var wire 32 p inst_addr_i [31:0] $end
$var wire 32 q inst_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 r inst_addr_o [31:0] $end
$var reg 32 s inst_o [31:0] $end
$upscope $end
$scope module mem0 $end
$var wire 5 t reg_waddr_i [4:0] $end
$var wire 32 u reg_wdata_i [31:0] $end
$var wire 1 5 reg_we_i $end
$var wire 1 " rst_i $end
$var reg 5 v reg_waddr_o [4:0] $end
$var reg 32 w reg_wdata_o [31:0] $end
$var reg 1 4 reg_we_o $end
$upscope $end
$scope module mem_wb0 $end
$var wire 1 ! clk_i $end
$var wire 5 x reg_waddr_i [4:0] $end
$var wire 32 y reg_wdata_i [31:0] $end
$var wire 1 4 reg_we_i $end
$var wire 1 " rst_i $end
$var reg 5 z reg_waddr_o [4:0] $end
$var reg 32 { reg_wdata_o [31:0] $end
$var reg 1 * reg_we_o $end
$upscope $end
$scope module pc_reg0 $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var reg 1 # ce_o $end
$var reg 32 | pc_o [31:0] $end
$upscope $end
$scope module regfile0 $end
$var wire 1 ! clk_i $end
$var wire 5 } raddr1_i [4:0] $end
$var wire 5 ~ raddr2_i [4:0] $end
$var wire 1 0 re1_i $end
$var wire 1 - re2_i $end
$var wire 1 " rst_i $end
$var wire 5 !" waddr_i [4:0] $end
$var wire 32 "" wdata_i [31:0] $end
$var wire 1 * we_i $end
$var reg 32 #" rdata1_o [31:0] $end
$var reg 32 $" rdata2_o [31:0] $end
$var integer 32 %" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 %"
b0 $"
b0 #"
bx ""
bx !"
b0 ~
b0 }
bx |
bx {
bx z
b0 y
b0 x
b0 w
b0 v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
b0 k
b0 j
b0 i
b10010 h
b0 g
b0 f
b0 e
b0 d
b0 c
bx b
b10010 a
bx `
bx _
bx ^
bx ]
b0 \
b0 [
bx Z
bx Y
b0 X
b0 W
bx V
bx U
b0 T
b0 S
bx R
bx Q
b0 P
b0 O
b0 N
b0 M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
b0 D
b0 C
xB
0A
b10010 @
bx ?
bx >
b0 =
b0 <
b0 ;
0:
bx 9
b0 8
bx 7
b0 6
x5
04
bx 3
b0 2
b0 1
00
b0 /
b0 .
0-
bx ,
bx +
x*
bx )
bx (
bx '
bx &
bx %
bx $
x#
0"
0!
$end
#10
b0 %
b0 '
b0 )
b0 q
0#
b0 ?
b0 ^
b0 r
b0 E
b0 I
b0 o
0B
b0 F
b0 J
b0 n
b0 G
b0 K
b0 m
b10010 H
b10010 L
b10010 l
b0 7
b0 R
b0 u
05
b0 9
b0 Q
b0 t
b0 +
b0 {
b0 ""
1*
b0 ,
b0 z
b0 !"
b0 U
b0 V
b0 Y
b0 _
b0 `
b10010 Z
b10010 >
b10010 ]
b10010 s
1!
#20
0!
#30
b0 $
b0 &
b0 (
b0 p
b0 3
b0 |
1!
#40
0!
#50
1!
#60
0!
#70
1!
#80
0!
#90
1!
#100
0!
#110
1!
#120
0!
#130
1!
#140
0!
#150
1!
#160
0!
#170
1!
#180
0!
#190
1!
#195
bx <
bx d
bx j
bx =
bx c
bx i
1"
#200
0!
#210
b1000001110000100010011 %
b1000001110000100010011 '
b1000001110000100010011 )
b1000001110000100010011 q
b0 Z
1#
b0 >
b0 ]
b0 s
bx F
bx J
bx n
bx G
bx K
bx m
0*
1!
#220
0!
#230
b10 <
b10 d
b10 j
b0 =
b0 c
b0 i
b10110 @
b10110 a
b10110 h
b10 b
10
b1 2
b1 e
b1 }
b10 ;
b10 g
b10 k
1:
b100010110000110010011 %
b100010110000110010011 '
b100010110000110010011 )
b100010110000110010011 q
b10 U
b1 V
b10 Y
b110 `
b10011 Z
b1000001110000100010011 >
b1000001110000100010011 ]
b1000001110000100010011 s
b1 $
b1 &
b1 (
b1 p
b1 3
b1 |
1!
#240
0!
#250
b1 <
b1 d
b1 j
b10 =
b10 c
b10 i
b10 2
b10 e
b10 }
b11 ;
b11 g
b11 k
bx %
bx '
bx )
bx q
b1 b
1A
b10 C
b10 N
b10 P
b10 T
b10 D
b10 M
b10 O
b10 S
b1 U
b10 V
b11 Y
b10 $
b10 &
b10 (
b10 p
b10 3
b10 |
b100010110000110010011 >
b100010110000110010011 ]
b100010110000110010011 s
b1 ?
b1 ^
b1 r
b10 E
b10 I
b10 o
1B
b10 F
b10 J
b10 n
b0 G
b0 K
b0 m
b10110 H
b10110 L
b10110 l
1!
#260
0!
#270
bx <
bx d
bx j
bx =
bx c
bx i
b10010 @
b10010 a
b10010 h
00
b0 2
b0 e
b0 }
b0 ;
b0 g
b0 k
b10 6
b10 [
b10 w
b10 y
14
b10 8
b10 \
b10 v
b10 x
b11 C
b11 N
b11 P
b11 T
b11 D
b11 M
b11 O
b11 S
bx b
1:
bx U
bx V
bx Y
bx _
bx `
bx Z
b10 7
b10 R
b10 u
15
b10 9
b10 Q
b10 t
b11 E
b11 I
b11 o
b1 F
b1 J
b1 n
b10 G
b10 K
b10 m
bx >
bx ]
bx s
b10 ?
b10 ^
b10 r
b11 $
b11 &
b11 (
b11 p
b11 3
b11 |
1!
#280
0!
#290
0A
b0 C
b0 N
b0 P
b0 T
b0 D
b0 M
b0 O
b0 S
b11 6
b11 [
b11 w
b11 y
b11 8
b11 \
b11 v
b11 x
b100 $
b100 &
b100 (
b100 p
b100 3
b100 |
b11 ?
b11 ^
b11 r
b0 E
b0 I
b0 o
bx F
bx J
bx n
bx G
bx K
bx m
b10010 H
b10010 L
b10010 l
b11 7
b11 R
b11 u
b11 9
b11 Q
b11 t
b10 +
b10 {
b10 ""
1*
b10 ,
b10 z
b10 !"
1!
#300
0!
#310
b0 6
b0 [
b0 w
b0 y
04
b0 8
b0 \
b0 v
b0 x
b11 +
b11 {
b11 ""
b11 ,
b11 z
b11 !"
b0 7
b0 R
b0 u
05
b0 9
b0 Q
b0 t
b100 ?
b100 ^
b100 r
b101 $
b101 &
b101 (
b101 p
b101 3
b101 |
1!
#320
0!
#330
b110 $
b110 &
b110 (
b110 p
b110 3
b110 |
b101 ?
b101 ^
b101 r
b0 +
b0 {
b0 ""
0*
b0 ,
b0 z
b0 !"
1!
#340
0!
#350
b110 ?
b110 ^
b110 r
b111 $
b111 &
b111 (
b111 p
b111 3
b111 |
1!
#360
0!
#370
b1000 $
b1000 &
b1000 (
b1000 p
b1000 3
b1000 |
b111 ?
b111 ^
b111 r
1!
#380
0!
#390
b1000 ?
b1000 ^
b1000 r
b1001 $
b1001 &
b1001 (
b1001 p
b1001 3
b1001 |
1!
#400
0!
#410
b1010 $
b1010 &
b1010 (
b1010 p
b1010 3
b1010 |
b1001 ?
b1001 ^
b1001 r
1!
#420
0!
#430
b1010 ?
b1010 ^
b1010 r
b1011 $
b1011 &
b1011 (
b1011 p
b1011 3
b1011 |
1!
#440
0!
#450
b1100 $
b1100 &
b1100 (
b1100 p
b1100 3
b1100 |
b1011 ?
b1011 ^
b1011 r
1!
#460
0!
#470
b1100 ?
b1100 ^
b1100 r
b1101 $
b1101 &
b1101 (
b1101 p
b1101 3
b1101 |
1!
#480
0!
#490
b1110 $
b1110 &
b1110 (
b1110 p
b1110 3
b1110 |
b1101 ?
b1101 ^
b1101 r
1!
#500
0!
#510
b1110 ?
b1110 ^
b1110 r
b1111 $
b1111 &
b1111 (
b1111 p
b1111 3
b1111 |
1!
#520
0!
#530
b10000 $
b10000 &
b10000 (
b10000 p
b10000 3
b10000 |
b1111 ?
b1111 ^
b1111 r
1!
#540
0!
#550
b10000 ?
b10000 ^
b10000 r
b10001 $
b10001 &
b10001 (
b10001 p
b10001 3
b10001 |
1!
#560
0!
#570
b10010 $
b10010 &
b10010 (
b10010 p
b10010 3
b10010 |
b10001 ?
b10001 ^
b10001 r
1!
#580
0!
#590
b10010 ?
b10010 ^
b10010 r
b10011 $
b10011 &
b10011 (
b10011 p
b10011 3
b10011 |
1!
#600
0!
#610
b10100 $
b10100 &
b10100 (
b10100 p
b10100 3
b10100 |
b10011 ?
b10011 ^
b10011 r
1!
#620
0!
#630
b10100 ?
b10100 ^
b10100 r
b10101 $
b10101 &
b10101 (
b10101 p
b10101 3
b10101 |
1!
#640
0!
#650
b10110 $
b10110 &
b10110 (
b10110 p
b10110 3
b10110 |
b10101 ?
b10101 ^
b10101 r
1!
#660
0!
#670
b10110 ?
b10110 ^
b10110 r
b10111 $
b10111 &
b10111 (
b10111 p
b10111 3
b10111 |
1!
#680
0!
#690
b11000 $
b11000 &
b11000 (
b11000 p
b11000 3
b11000 |
b10111 ?
b10111 ^
b10111 r
1!
#700
0!
#710
b11000 ?
b11000 ^
b11000 r
b11001 $
b11001 &
b11001 (
b11001 p
b11001 3
b11001 |
1!
#720
0!
#730
b11010 $
b11010 &
b11010 (
b11010 p
b11010 3
b11010 |
b11001 ?
b11001 ^
b11001 r
1!
#740
0!
#750
b11010 ?
b11010 ^
b11010 r
b11011 $
b11011 &
b11011 (
b11011 p
b11011 3
b11011 |
1!
#760
0!
#770
b11100 $
b11100 &
b11100 (
b11100 p
b11100 3
b11100 |
b11011 ?
b11011 ^
b11011 r
1!
#780
0!
#790
b11100 ?
b11100 ^
b11100 r
b11101 $
b11101 &
b11101 (
b11101 p
b11101 3
b11101 |
1!
#800
0!
#810
b11110 $
b11110 &
b11110 (
b11110 p
b11110 3
b11110 |
b11101 ?
b11101 ^
b11101 r
1!
#820
0!
#830
b11110 ?
b11110 ^
b11110 r
b11111 $
b11111 &
b11111 (
b11111 p
b11111 3
b11111 |
1!
#840
0!
#850
b100000 $
b100000 &
b100000 (
b100000 p
b100000 3
b100000 |
b11111 ?
b11111 ^
b11111 r
1!
#860
0!
#870
b100000 ?
b100000 ^
b100000 r
b100001 $
b100001 &
b100001 (
b100001 p
b100001 3
b100001 |
1!
#880
0!
#890
b100010 $
b100010 &
b100010 (
b100010 p
b100010 3
b100010 |
b100001 ?
b100001 ^
b100001 r
1!
#900
0!
#910
b100010 ?
b100010 ^
b100010 r
b100011 $
b100011 &
b100011 (
b100011 p
b100011 3
b100011 |
1!
#920
0!
#930
b100100 $
b100100 &
b100100 (
b100100 p
b100100 3
b100100 |
b100011 ?
b100011 ^
b100011 r
1!
#940
0!
#950
b100100 ?
b100100 ^
b100100 r
b100101 $
b100101 &
b100101 (
b100101 p
b100101 3
b100101 |
1!
#960
0!
#970
b100110 $
b100110 &
b100110 (
b100110 p
b100110 3
b100110 |
b100101 ?
b100101 ^
b100101 r
1!
#980
0!
#990
b100110 ?
b100110 ^
b100110 r
b100111 $
b100111 &
b100111 (
b100111 p
b100111 3
b100111 |
1!
#1000
0!
#1010
b101000 $
b101000 &
b101000 (
b101000 p
b101000 3
b101000 |
b100111 ?
b100111 ^
b100111 r
1!
#1020
0!
#1030
b101000 ?
b101000 ^
b101000 r
b101001 $
b101001 &
b101001 (
b101001 p
b101001 3
b101001 |
1!
#1040
0!
#1050
b101010 $
b101010 &
b101010 (
b101010 p
b101010 3
b101010 |
b101001 ?
b101001 ^
b101001 r
1!
#1060
0!
#1070
b101010 ?
b101010 ^
b101010 r
b101011 $
b101011 &
b101011 (
b101011 p
b101011 3
b101011 |
1!
#1080
0!
#1090
b101100 $
b101100 &
b101100 (
b101100 p
b101100 3
b101100 |
b101011 ?
b101011 ^
b101011 r
1!
#1100
0!
#1110
b101100 ?
b101100 ^
b101100 r
b101101 $
b101101 &
b101101 (
b101101 p
b101101 3
b101101 |
1!
#1120
0!
#1130
b101110 $
b101110 &
b101110 (
b101110 p
b101110 3
b101110 |
b101101 ?
b101101 ^
b101101 r
1!
#1140
0!
#1150
b101110 ?
b101110 ^
b101110 r
b101111 $
b101111 &
b101111 (
b101111 p
b101111 3
b101111 |
1!
#1160
0!
#1170
b110000 $
b110000 &
b110000 (
b110000 p
b110000 3
b110000 |
b101111 ?
b101111 ^
b101111 r
1!
#1180
0!
#1190
b110000 ?
b110000 ^
b110000 r
b110001 $
b110001 &
b110001 (
b110001 p
b110001 3
b110001 |
1!
#1195
